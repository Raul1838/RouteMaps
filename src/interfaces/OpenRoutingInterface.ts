// Generated by https://quicktype.io

export interface GetPlaceByCoord {
    geocoding: Geocoding;
    type:      string;
    features:  Feature[];
    bbox:      number[];
}

export interface Feature {
    type:       FeatureType;
    geometry:   Geometry;
    properties: Properties;
    bbox?:      number[];
}

export interface Geometry {
    type:        GeometryType;
    coordinates: number[];
}

export enum GeometryType {
    Point = "Point",
}

export interface Properties {
    id:                string;
    gid:               string;
    layer:             Layer;
    source:            Source;
    source_id:         string;
    name:              string;
    confidence:        number;
    distance:          number;
    accuracy:          Accuracy;
    country:           Country;
    country_gid:       CountryGid;
    country_a:         CountryA;
    macroregion:       Macroregion;
    macroregion_gid:   MacroregionGid;
    region:            Locality;
    region_gid:        RegionGid;
    region_a:          RegionA;
    locality:          Locality;
    locality_gid:      LocalityGid;
    neighbourhood:     Neighbourhood;
    neighbourhood_gid: NeighbourhoodGid;
    continent:         Continent;
    continent_gid:     ContinentGid;
    label:             string;
    addendum?:         Addendum;
    street?:           string;
    housenumber?:      string;
}

export enum Accuracy {
    Centroid = "centroid",
    Point = "point",
}

export interface Addendum {
    osm: Osm;
}

export interface Osm {
    wheelchair?: string;
    operator?:   string;
    brand?:      string;
}

export enum Continent {
    Europe = "Europe",
}

export enum ContinentGid {
    WhosonfirstContinent102191581 = "whosonfirst:continent:102191581",
}

export enum Country {
    Spain = "Spain",
}

export enum CountryA {
    Esp = "ESP",
}

export enum CountryGid {
    WhosonfirstCountry85633129 = "whosonfirst:country:85633129",
}

export enum Layer {
    Address = "address",
    Street = "street",
    Venue = "venue",
}

export enum Locality {
    Madrid = "Madrid",
}

export enum LocalityGid {
    WhosonfirstLocality101748283 = "whosonfirst:locality:101748283",
}

export enum Macroregion {
    CommunityOfMadrid = "Community of Madrid",
}

export enum MacroregionGid {
    WhosonfirstMacroregion404227387 = "whosonfirst:macroregion:404227387",
}

export enum Neighbourhood {
    Guindalera = "Guindalera",
    Lista = "Lista",
}

export enum NeighbourhoodGid {
    WhosonfirstNeighbourhood85863643 = "whosonfirst:neighbourhood:85863643",
    WhosonfirstNeighbourhood85863805 = "whosonfirst:neighbourhood:85863805",
}

export enum RegionA {
    Md = "MD",
}

export enum RegionGid {
    WhosonfirstRegion85682783 = "whosonfirst:region:85682783",
}

export enum Source {
    Openstreetmap = "openstreetmap",
}

export enum FeatureType {
    Feature = "Feature",
}

export interface Geocoding {
    version:     string;
    attribution: string;
    query:       Query;
    engine:      Engine;
    timestamp:   number;
}

export interface Engine {
    name:    string;
    author:  string;
    version: string;
}

export interface Query {
    size:                  number;
    private:               boolean;
    "point.lat":           number;
    "point.lon":           number;
    "boundary.circle.lat": number;
    "boundary.circle.lon": number;
    lang:                  Lang;
    querySize:             number;
}

export interface Lang {
    name:      string;
    iso6391:   string;
    iso6393:   string;
    via:       string;
    defaulted: boolean;
}
